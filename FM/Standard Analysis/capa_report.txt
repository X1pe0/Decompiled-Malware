md5                  91e06d83a0ea2e73f8143f9d70c2b8b1
sha1                 7ff7ce00ddb41170fe4b86858ae7bf4b9957ff0c
sha256               3c4063956b797106cc43a49a634bb530aecd6e9a898124bb8fed6978f4556ee0
path                 /home/bitnix/Desktop/FM/fm.dll
timestamp            2021-04-07T11:24:47.576007
capa version         v1.5.1-0-g8121f29
format               auto
extractor            VivisectFeatureExtractor
base address         0x10000000
rules                (embedded rules)
function count       278
total feature count  9529

check for software breakpoints
namespace   anti-analysis/anti-debugging/debugger-detection
author      michael.hunhoff@fireeye.com
scope       function
mbc         Anti-Behavioral Analysis::Debugger Detection::Software Breakpoints [B0001.025]
references  https://github.com/LordNoteworthy/al-khaser/blob/master/al-khaser/AntiDebug/SoftwareBreakpoints.cpp
examples    al-khaser_x86.exe_:0x431020
function @ 0x1000ABC4
  and:
    subscope:
      and:
        mnemonic: cmp @ 0x1000ABCD
        or:
          number: 0xCC @ 0x1000ABC7
    match: contain loop @ 0x1000ABC4
      or:
        characteristic: loop @ 0x1000ABC4
        characteristic: tight loop @ 0x1000AC28, 0x1000AC78

execute anti-debugging instructions
namespace  anti-analysis/anti-debugging/debugger-detection
author     moritz.raabe@fireeye.com
scope      function
mbc        Anti-Behavioral Analysis::Debugger Detection::Anti-debugging Instructions [B0001.034]
examples   Practical Malware Analysis Lab 16-03.exe_:0x401300
function @ 0x10005B38
  or:
    count(mnemonic(rdtsc)): 2 or more @ 0x10005B43, 0x10005B4E, 0x10005B64

reference SQL statements
namespace  collection/database/sql
author     william.ballenthin@fireeye.com
scope      function
att&ck     Collection::Data from Information Repositories [T1213]
examples   5F66B82558CA92E54E77F216EF4C066C:0x42B1DF
function @ 0x10003C27
  and:
    string: SELECT * FROM __InstanceModificationEvent WITHIN 1 WHERE TargetInstance ISA 'Win32_Service' @ 0x10003DEE

check HTTP status code
namespace  communication/http/client
author     moritz.raabe@fireeye.com
scope      function
mbc        Communication::HTTP Communication::Read Header [C0002.014]
examples   54ac78733552a62d1d05ea4ba3fc604bb49fe000d7fc948da45335b726e64d75:0x10001a20
function @ 0x10007EAF
  and:
    number: 0x20000013 = HTTP_QUERY_FLAG_NUMBER | HTTP_QUERY_STATUS_CODE @ 0x10008089
    subscope:
      and:
        or:
          mnemonic: cmp @ 0x100080A1
        or:
          number: 0xC8 = OK @ 0x100080A1

hash data with CRC32
namespace  data-manipulation/checksum/crc32
author     moritz.raabe@fireeye.com
scope      function
mbc        Data::Checksum::CRC32 [C0032.001]
examples   2D3EDC218A90F03089CC01715A9F047F:0x403CBD, 7D28CB106CB54876B2A5C111724A07CD:0x402350, 7EFF498DE13CC734262F87E6B3EF38AB:0x100084A6
function @ 0x10006C40
  or:
    and:
      mnemonic: shr @ 0x10006C60
      number: 0xEDB88320 @ 0x10006C68
      number: 0x8 @ 0x10006C58
      characteristic: nzxor @ 0x10006C5A, 0x10006C6D

encode data using Base64
namespace  data-manipulation/encoding/base64
author     moritz.raabe@fireeye.com
scope      function
att&ck     Defense Evasion::Obfuscated Files or Information [T1027]
mbc        Defense Evasion::Obfuscated Files or Information::Encoding-Standard Algorithm [E1027.m02], Data::Encoding::Base64 [C0026.001]
examples   BFB9B5391A13D0AFD787E87AB90F14F5:0x1314889C, 074072B261FC27B65C72671F13510C05:0x100049B2, 5DB2D2BE20D59AA0BE6709A6850F1775:0x18001CC30, 08AC667C65D36D6542917655571E61C8:0x406EAA
function @ 0x1000B995
  and:
    mnemonic: shl @ 0x1000BB26, 0x1000BB31, 0x1000BB39, 0x1000BBFB, and 2 more...
    mnemonic: shr @ 0x1000BC4A, 0x1000BC7D, 0x1000BC87, 0x1000BCB2, and 2 more...
    number: 0x3F @ 0x1000BC4D, 0x1000BC8A, 0x1000BC8D, 0x1000BCBF, and 2 more...
    or:
      number: 0x3D = '=' @ 0x1000BF19
    match: contain loop @ 0x1000B995
      or:
        characteristic: loop @ 0x1000B995
        characteristic: tight loop @ 0x1000C5B6
    optional:
      number: 0x2 @ 0x1000BBFB, 0x1000BC40, 0x1000BC5C, 0x1000C032, and 4 more...
      number: 0x3 @ 0x1000B9C7, 0x1000B9DD, 0x1000B9E0, 0x1000BBF8, and 14 more...
      number: 0x4 @ 0x1000BA7B, 0x1000BA8D, 0x1000BAB2, 0x1000BB26, and 13 more...
      number: 0x6 @ 0x1000B9FA, 0x1000BB61, 0x1000BC4A, 0x1000BC87, and 3 more...

encode data using XOR (13 matches)
namespace  data-manipulation/encoding/xor
author     moritz.raabe@fireeye.com
scope      basic block
att&ck     Defense Evasion::Obfuscated Files or Information [T1027]
mbc        Defense Evasion::Obfuscated Files or Information::Encoding-Standard Algorithm [E1027.m02], Data::Encoding::XOR [C0026.002]
examples   2D3EDC218A90F03089CC01715A9F047F:0x403D7E
basic block @ 0x10006B54
  and:
    characteristic: tight loop @ 0x10006B54
    characteristic: nzxor @ 0x10006B97
    not:
      or:
        number: 0xFFFFFFFF
        number: 0xFFFFFFFFFFFFFFFF
        number: 0xFFFFFFF
        number: 0xFFFFFFFFFFFFFFF
        number: 0x7EFEFEFF
        number: 0x81010101
        number: 0x81010100
        number: 0x7EFEFEFEFEFEFEFF
        number: 0x8101010101010101
        number: 0x8101010101010100
basic block @ 0x10006C5E
  and:
    characteristic: tight loop @ 0x10006C5E
    characteristic: nzxor @ 0x10006C6D
    not:
      or:
        number: 0xFFFFFFFF
        number: 0xFFFFFFFFFFFFFFFF
        number: 0xFFFFFFF
        number: 0xFFFFFFFFFFFFFFF
        number: 0x7EFEFEFF
        number: 0x81010101
        number: 0x81010100
        number: 0x7EFEFEFEFEFEFEFF
        number: 0x8101010101010101
        number: 0x8101010101010100
basic block @ 0x10006DE4
  and:
    characteristic: tight loop @ 0x10006DE4
    characteristic: nzxor @ 0x10006DE7
    not:
      or:
        number: 0xFFFFFFFF
        number: 0xFFFFFFFFFFFFFFFF
        number: 0xFFFFFFF
        number: 0xFFFFFFFFFFFFFFF
        number: 0x7EFEFEFF
        number: 0x81010101
        number: 0x81010100
        number: 0x7EFEFEFEFEFEFEFF
        number: 0x8101010101010101
        number: 0x8101010101010100
basic block @ 0x10008486
  and:
    characteristic: tight loop @ 0x10008486
    characteristic: nzxor @ 0x10008490
    not:
      or:
        number: 0xFFFFFFFF
        number: 0xFFFFFFFFFFFFFFFF
        number: 0xFFFFFFF
        number: 0xFFFFFFFFFFFFFFF
        number: 0x7EFEFEFF
        number: 0x81010101
        number: 0x81010100
        number: 0x7EFEFEFEFEFEFEFF
        number: 0x8101010101010101
        number: 0x8101010101010100
basic block @ 0x100084C1
  and:
    characteristic: tight loop @ 0x100084C1
    characteristic: nzxor @ 0x100084C9
    not:
      or:
        number: 0xFFFFFFFF
        number: 0xFFFFFFFFFFFFFFFF
        number: 0xFFFFFFF
        number: 0xFFFFFFFFFFFFFFF
        number: 0x7EFEFEFF
        number: 0x81010101
        number: 0x81010100
        number: 0x7EFEFEFEFEFEFEFF
        number: 0x8101010101010101
        number: 0x8101010101010100
basic block @ 0x100085D9
  and:
    characteristic: tight loop @ 0x100085D9
    characteristic: nzxor @ 0x100085E1, 0x100085ED, 0x100085F9, 0x10008606, and 28 more...
    not:
      or:
        number: 0xFFFFFFFF
        number: 0xFFFFFFFFFFFFFFFF
        number: 0xFFFFFFF
        number: 0xFFFFFFFFFFFFFFF
        number: 0x7EFEFEFF
        number: 0x81010101
        number: 0x81010100
        number: 0x7EFEFEFEFEFEFEFF
        number: 0x8101010101010101
        number: 0x8101010101010100
basic block @ 0x10008DDD
  and:
    characteristic: tight loop @ 0x10008DDD
    characteristic: nzxor @ 0x10008E09, 0x10008E18, 0x10008E29, 0x10008E2B, and 4 more...
    not:
      or:
        number: 0xFFFFFFFF
        number: 0xFFFFFFFFFFFFFFFF
        number: 0xFFFFFFF
        number: 0xFFFFFFFFFFFFFFF
        number: 0x7EFEFEFF
        number: 0x81010101
        number: 0x81010100
        number: 0x7EFEFEFEFEFEFEFF
        number: 0x8101010101010101
        number: 0x8101010101010100
basic block @ 0x10008F16
  and:
    characteristic: tight loop @ 0x10008F16
    characteristic: nzxor @ 0x10008F19, 0x10008F1F, 0x10008F52, 0x10008F61, and 6 more...
    not:
      or:
        number: 0xFFFFFFFF
        number: 0xFFFFFFFFFFFFFFFF
        number: 0xFFFFFFF
        number: 0xFFFFFFFFFFFFFFF
        number: 0x7EFEFEFF
        number: 0x81010101
        number: 0x81010100
        number: 0x7EFEFEFEFEFEFEFF
        number: 0x8101010101010101
        number: 0x8101010101010100
basic block @ 0x10009071
  and:
    characteristic: tight loop @ 0x10009071
    characteristic: nzxor @ 0x10009096, 0x100090A6, 0x100090B3, 0x100090B8, and 11 more...
    not:
      or:
        number: 0xFFFFFFFF
        number: 0xFFFFFFFFFFFFFFFF
        number: 0xFFFFFFF
        number: 0xFFFFFFFFFFFFFFF
        number: 0x7EFEFEFF
        number: 0x81010101
        number: 0x81010100
        number: 0x7EFEFEFEFEFEFEFF
        number: 0x8101010101010101
        number: 0x8101010101010100
basic block @ 0x1000AB99
  and:
    characteristic: tight loop @ 0x1000AB99
    characteristic: nzxor @ 0x1000AB9E, 0x1000ABA2, 0x1000ABAE
    not:
      or:
        number: 0xFFFFFFFF
        number: 0xFFFFFFFFFFFFFFFF
        number: 0xFFFFFFF
        number: 0xFFFFFFFFFFFFFFF
        number: 0x7EFEFEFF
        number: 0x81010101
        number: 0x81010100
        number: 0x7EFEFEFEFEFEFEFF
        number: 0x8101010101010101
        number: 0x8101010101010100
basic block @ 0x1000AC28
  and:
    characteristic: tight loop @ 0x1000AC28
    characteristic: nzxor @ 0x1000AC33
    not:
      or:
        number: 0xFFFFFFFF
        number: 0xFFFFFFFFFFFFFFFF
        number: 0xFFFFFFF
        number: 0xFFFFFFFFFFFFFFF
        number: 0x7EFEFEFF
        number: 0x81010101
        number: 0x81010100
        number: 0x7EFEFEFEFEFEFEFF
        number: 0x8101010101010101
        number: 0x8101010101010100
basic block @ 0x1000AC78
  and:
    characteristic: tight loop @ 0x1000AC78
    characteristic: nzxor @ 0x1000AC83
    not:
      or:
        number: 0xFFFFFFFF
        number: 0xFFFFFFFFFFFFFFFF
        number: 0xFFFFFFF
        number: 0xFFFFFFFFFFFFFFF
        number: 0x7EFEFEFF
        number: 0x81010101
        number: 0x81010100
        number: 0x7EFEFEFEFEFEFEFF
        number: 0x8101010101010101
        number: 0x8101010101010100
basic block @ 0x1000AD13
  and:
    characteristic: tight loop @ 0x1000AD13
    characteristic: nzxor @ 0x1000AD16, 0x1000AD19, 0x1000AD1C, 0x1000AD22, and 188 more...
    not:
      or:
        number: 0xFFFFFFFF
        number: 0xFFFFFFFFFFFFFFFF
        number: 0xFFFFFFF
        number: 0xFFFFFFFFFFFFFFF
        number: 0x7EFEFEFF
        number: 0x81010101
        number: 0x81010100
        number: 0x7EFEFEFEFEFEFEFF
        number: 0x8101010101010101
        number: 0x8101010101010100

encrypt data using RC4 KSA
namespace  data-manipulation/encryption/rc4
author     moritz.raabe@fireeye.com
scope      function
att&ck     Defense Evasion::Obfuscated Files or Information [T1027]
mbc        Cryptography::Encrypt Data::RC4 [C0027.009], Cryptography::Encryption Key::RC4 KSA [C0028.002]
examples   34404A3FB9804977C6AB86CB991FB130:0x403D40, C805528F6844D7CAF5793C025B56F67D:0x4067AE, 9324D1A8AE37A36AE560C37448C9705A:0x404950, 782A48821D88060ADF0F7EF3E8759FEE3DDAD49E942DAAD18C5AF8AE0E9EB51E:0x405C42, 73CE04892E5F39EC82B00C02FC04C70F:0x40646E
function @ 0x10006AE5
  or:
    and:
      subscope:
        and: = initialize S
          characteristic: tight loop @ 0x10006B03
          or:
            number: 0x100 @ 0x10006B2E
        and: = initialize S
          characteristic: tight loop @ 0x10006AF3
          or:
            number: 0x100 @ 0x10006AF7
      or:
        count(mnemonic(movzx)): 2 or more @ 0x10006B0A, 0x10006B13, 0x10006B1B
      or: = modulo key length
        mnemonic: div @ 0x10006B0D

encrypt data using RC4 PRGA
namespace  data-manipulation/encryption/rc4
author     moritz.raabe@fireeye.com
scope      function
att&ck     Defense Evasion::Obfuscated Files or Information [T1027]
mbc        Cryptography::Encrypt Data::RC4 [C0027.009], Cryptography::Generate Pseudo-random Sequence::RC4 PRGA [C0021.004]
examples   34404A3FB9804977C6AB86CB991FB130:0x403DB0, 34404A3FB9804977C6AB86CB991FB130:0x403E50, 9324D1A8AE37A36AE560C37448C9705A:0x4049F0, 73CE04892E5F39EC82B00C02FC04C70F:0x4064C6
function @ 0x10006B3D
  and:
    count(characteristic(nzxor)): 1 @ 0x10006B97
    or:
      count(mnemonic(movzx)): 4 or more @ 0x10006B58, 0x10006B67, 0x10006B6C, 0x10006B82, and 2 more...
    count(characteristic(calls from)): 4 or fewer
    count(basicblock): 4 or more @ 0x10006B3D, 0x10006B4D, 0x10006B54, 0x10006BA8, and 1 more...
    match: contain loop @ 0x10006B3D
      or:
        characteristic: tight loop @ 0x10006B54

create thread
namespace  host-interaction/thread/create
author     moritz.raabe@fireeye.com, michael.hunhoff@fireeye.com
scope      basic block
mbc        Process::Create Thread [C0038]
examples   946A99F36A46D335DEC080D9A4371940:0x10001DA0, B5F85C26D7AA5A1FB4AF5821B6B5AB9B:0x408020
basic block @ 0x10004542
  or:
    api: kernel32.CreateThread @ 0x1000454E

parse PE header (5 matches)
namespace  load-code/pe
author     moritz.raabe@fireeye.com
scope      function
att&ck     Execution::Shared Modules [T1129]
examples   9324D1A8AE37A36AE560C37448C9705A:0x403DD0
function @ 0x10006F0B
  or:
    and:
      mnemonic: cmp @ 0x10006F22, 0x10006F31, 0x10006F58, 0x10006F82, and 2 more...
      or:
        number: 0x4550 = IMAGE_DOS_SIGNATURE (MZ) @ 0x10006F31
      or:
        number: 0x5A4D = IMAGE_NT_SIGNATURE (PE) @ 0x10006F1C
function @ 0x1000A00D
  or:
    and:
      offset: 0x3C = IMAGE_DOS_HEADER.e_lfanew @ 0x1000A1C3
      or:
        and:
          offset/x32: 0x50 = IMAGE_NT_HEADERS.OptionalHeader.SizeOfImage @ 0x1000A2FB
          offset/x32: 0x34 = IMAGE_NT_HEADERS.OptionalHeader.ImageBase @ 0x1000A16C
function @ 0x1000A5EF
  or:
    and:
      offset: 0x3C = IMAGE_DOS_HEADER.e_lfanew @ 0x1000A646, 0x1000A654, 0x1000A662
      or:
        and:
          offset/x32: 0x50 = IMAGE_NT_HEADERS.OptionalHeader.SizeOfImage @ 0x1000A76E
          offset/x32: 0x34 = IMAGE_NT_HEADERS.OptionalHeader.ImageBase @ 0x1000A679, 0x1000A687, 0x1000A692
function @ 0x1000A7E8
  or:
    and:
      offset: 0x3C = IMAGE_DOS_HEADER.e_lfanew @ 0x1000A905
      or:
        and:
          offset/x32: 0x50 = IMAGE_NT_HEADERS.OptionalHeader.SizeOfImage @ 0x1000A9CC
          offset/x32: 0x34 = IMAGE_NT_HEADERS.OptionalHeader.ImageBase @ 0x1000A8D2
function @ 0x1000AD00
  or:
    and:
      offset: 0x3C = IMAGE_DOS_HEADER.e_lfanew @ 0x1000AD4E, 0x1000AF46, 0x1000AF54, 0x1000B11F, and 3 more...
      or:
        and:
          offset/x32: 0x50 = IMAGE_NT_HEADERS.OptionalHeader.SizeOfImage @ 0x1000AD2D, 0x1000AE3A, 0x1000AE47, 0x1000B0FA, and 3 more...
          offset/x32: 0x34 = IMAGE_NT_HEADERS.OptionalHeader.ImageBase @ 0x1000ADAB, 0x1000AEBF, 0x1000AECD, 0x1000B448, and 3 more...



